CUSTOM_PROFILE="yes"

CFLAGS="-O2 -fno-reorder-blocks -fno-reorder-functions -pipe -fno-omit-frame-pointer -march=native"
CXXFLAGS="${CFLAGS}"
MAKEOPTS="-j3"

LINGUAS="en en_GB gb hu hu_HU"

PORTAGE_IONICE_COMMAND="ionice -c 3 -p \${PID}"
PORTAGE_NICENESS="5"
#digest multilib-strict
#downgrade-backup unmerge-backup -buildpk
FEATURES="metadata-transfer preserve-libs ccache fixlafiles unmerge-orphans assume-digests userfetch -userpriv sandbox -usersandbox fakeroot news candy prelink-checksums -collision-protect protect-owned split-elog split-log clean-logs -parse-eapi-ebuild-head"
COLLISION_IGNORE="/*"
ACCEPT_LICENSE="*"
CONFIG_PROTECT="${CONFIG_PROTECT} 
/usr/share/apps/ksmserver/screenlocker/org.kde.passworddialog/contents/ui/main.qml 
/opt/VirtualBox/VBox.sh 
/etc/splash"

CURL_SSL="gnutls"

PHP_TARGETS="php5-5"

#USE_ORDER = "env:pkg:conf:repo:defaults:pkginternal:env.d"

# Logging
#PORTAGE_ELOG_CLASSES="warn error info log qa"
PORTAGE_ELOG_CLASSES="warn error info log"

#PORTAGE_ELOG_SYSTEM="save:warn,error save_summary echo"
PORTAGE_ELOG_SYSTEM="save"

GENTOO_MIRRORS="http://www.mirrorservice.org/sites/www.ibiblio.org/gentoo"
#GENTOO_MIRRORS="http://gentoo.inf.elte.hu http://www.mirrorservice.org/sites/www.ibiblio.org/gentoo"

PKGDIR="/usr/portage/packages/`uname -m`"
PORT_LOGDIR="/var/log/portage/elog"
PORT_LOGDIR_CLEAN="find \${PORT_LOGDIR}/build -type f -ctime +7 -delete"

EMERGE_DEFAULT_OPTS="--verbose --columns --verbose-main-repo-display --quiet-build --keep-going --autounmask-write n --usepkg y --binpkg-respect-use y --fail-clean y --rebuild-if-new-ver"
QUICKPKG_DEFAULT_OPTS="--include-config=y"
EGENCACHE_DEFAULT_OPTS="--update --jobs=3 --use-local-desc-output=-"
#DISTCC_VERBOSE="1"
CCACHE_SIZE="2G"

# Icecream

# If you have compiled binutils/gcc/glibc with processor-specific flags
# (as normal using Gentoo), there is a greater chance that your compiler
# won't work on other machines. The best would be to build gcc, glibc and
# binutils without those flags and then copy the needed files into your
# tarball for distribution to other machines. This tarball can be created
# by running /usr/bin/icecc --build-native, and used by setting
# ICECC_VERSION in /etc/conf.d/icecream
#   ICECC_VERSION=<filename_of_archive_containing_your_environment>
# 
# To use icecream with portage add the following line to /etc/make.conf
#   PREROOTPATH=/usr/lib/icecc/bin
# 
# To use icecream with normal make use (e.g. in /etc/profile)
#   PATH=/usr/lib/icecc/bin:$PATH
# 
# N.B. To use icecream with ccache, the ccache PATH should come first:
#   PATH=/usr/lib/ccache/bin:/usr/lib/icecc/bin:$PATH
# 
# Don't forget to open the following ports in your firewall(s):
#  TCP/10245 on the daemon computers (required)
#  TCP/8765 for the the scheduler computer (required)
#  TCP/8766 for the telnet interface to the scheduler (optional)
#  UDP/8765 for broadcast to find the scheduler (optional)
# 
# Further usage instructions: http://en.opensuse.org/Icecream

#PREROOTPATH=/usr/lib64/icecc/bin
#PATH=/usr/lib64/icecc/bin:$PATH
